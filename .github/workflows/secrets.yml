# This is a basic workflow that experiment on secrets 
# https://github.com/Resnovas/variable-mastermind
name: Secrets

on:
  workflow_dispatch:
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

jobs:
  greet:
    runs-on: ubuntu-latest

    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"
      
  getConfigsJobOutput:
    runs-on: ubuntu-latest
    needs: [greet]
    outputs:
      setting: ${{steps.tests.outputs.test_setting}}} # By setting which outputs you want to use here you can use them in other jobs
    steps:
      - name: Manage Github Secrets
        uses: Videndum/manage-github-secrets@1.0.1
        with:
          settings: ${{ secrets.SETTINGS }} # The secret containing your JSON settings string
          settingsjson: '.github/allconfigs.json' # The file storing the settings (can be JSON or YML)
          mode: 'output' # The mode to output vars - Options: output, environment, secret
          token: ${{ secrets.GITHUB_TOKEN }} # Your github token to allow access to the API if needed (only used as backup when secret.SETTINGS isn't valid)

  test-output: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    needs: getConfigsJobOutput
    steps:
      - name: check output
        run: |
          echo "${{needs.getConfigsJobOutput.outputs.setting}}"      
          
  getConfigsJobEnv:
    runs-on: ubuntu-latest
    needs: greet
    steps:
      - name: Manage Github Secrets
        uses: Videndum/manage-github-secrets@1.0.1
        with:
          settings: ${{ secrets.SETTINGS }} # The secret containing your JSON settings string
          settingsjson: '.github/allconfigs.json' # The file storing the settings (can be JSON or YML)
          mode: 'environment' # The mode to output vars - Options: output, environment, secret
          token: ${{ secrets.GITHUB_TOKEN }} # Your github token to allow access to the API if needed (only used as backup when secret.SETTINGS isn't valid)
      - name: check env
        run: echo "${{env.test_setting}}"
